import React from 'react';
import Input from '../../../components/ui/Input';
import { DollarSign, TrendingDown, Package, AlertTriangle } from 'lucide-react';

/**
 * ProductPricingStock - Pricing and inventory section
 * Fields: price, original_price, cost_price, stock_quantity, min_stock_level
 */
const ProductPricingStock = ({ form = {}, onChange, errors = {} }) => {
  const update = (field, value) => onChange(field, value);

  // Calculate discount percentage
  const discountPercent = form.original_price > 0 && form.price > 0
    ? Math.round(((form.original_price - form.price) / form.original_price) * 100)
    : 0;

  // Calculate profit margin
  const profitMargin = form.cost_price > 0 && form.price > 0
    ? Math.round(((form.price - form.cost_price) / form.price) * 100)
    : 0;

  // Stock status
  const stockStatus = form.stock_quantity <= 0
    ? { label: 'H·∫øt h√†ng', color: 'text-red-600', bg: 'bg-red-50' }
    : form.stock_quantity <= (form.min_stock_level || 5)
    ? { label: 'S·∫Øp h·∫øt', color: 'text-yellow-600', bg: 'bg-yellow-50' }
    : { label: 'C√≤n h√†ng', color: 'text-green-600', bg: 'bg-green-50' };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex items-center gap-2 pb-2 border-b">
        <DollarSign size={20} className="text-primary" />
        <h3 className="text-lg font-semibold">Gi√° & T·ªìn kho</h3>
      </div>

      {/* Pricing Section */}
      <div className="bg-card border border-border rounded-lg p-4 space-y-4">
        <h4 className="font-medium flex items-center gap-2">
          <DollarSign size={16} />
          ƒê·ªãnh gi√°
        </h4>

        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          {/* Selling Price - Required */}
          <div className="md:col-span-1">
            <Input
              label="Gi√° b√°n"
              type="number"
              placeholder="0"
              value={form.price || ''}
              onChange={(e) => update('price', Number(e.target.value))}
              error={errors.price}
              required
              helper="Gi√° kh√°ch h√†ng thanh to√°n"
              min={0}
            />
          </div>

          {/* Original Price */}
          <div className="md:col-span-1">
            <Input
              label="Gi√° g·ªëc (tr∆∞·ªõc khuy·∫øn m√£i)"
              type="number"
              placeholder="0"
              value={form.original_price || ''}
              onChange={(e) => update('original_price', Number(e.target.value))}
              error={errors.original_price}
              helper="ƒê·ªÉ tr·ªëng n·∫øu kh√¥ng gi·∫£m gi√°"
              min={0}
            />
            {discountPercent > 0 && (
              <div className="mt-1 text-sm text-green-600 font-medium">
                Gi·∫£m {discountPercent}%
              </div>
            )}
          </div>

          {/* Cost Price */}
          <div className="md:col-span-1">
            <Input
              label="Gi√° v·ªën"
              type="number"
              placeholder="0"
              value={form.cost_price || ''}
              onChange={(e) => update('cost_price', Number(e.target.value))}
              error={errors.cost_price}
              helper="Gi√° nh·∫≠p h√†ng"
              min={0}
            />
            {profitMargin > 0 && (
              <div className="mt-1 text-sm text-blue-600 font-medium">
                L·ª£i nhu·∫≠n: {profitMargin}%
              </div>
            )}
          </div>
        </div>

        {/* Price Summary */}
        {form.price > 0 && (
          <div className="bg-muted/50 rounded p-3 text-sm space-y-1">
            <div className="flex justify-between">
              <span>Gi√° b√°n:</span>
              <span className="font-semibold">
                {(form.price || 0).toLocaleString('vi-VN')} ƒë
              </span>
            </div>
            {form.original_price > 0 && form.original_price > form.price && (
              <>
                <div className="flex justify-between text-muted-foreground line-through">
                  <span>Gi√° g·ªëc:</span>
                  <span>{(form.original_price || 0).toLocaleString('vi-VN')} ƒë</span>
                </div>
                <div className="flex justify-between text-green-600 font-medium">
                  <span>Ti·∫øt ki·ªám:</span>
                  <span>
                    {(form.original_price - form.price).toLocaleString('vi-VN')} ƒë (-{discountPercent}%)
                  </span>
                </div>
              </>
            )}
            {form.cost_price > 0 && (
              <div className="flex justify-between border-t pt-1 mt-1">
                <span>L·ª£i nhu·∫≠n/sp:</span>
                <span className={form.price > form.cost_price ? 'text-green-600 font-medium' : 'text-red-600 font-medium'}>
                  {(form.price - form.cost_price).toLocaleString('vi-VN')} ƒë
                </span>
              </div>
            )}
          </div>
        )}
      </div>

      {/* Stock Section */}
      <div className="bg-card border border-border rounded-lg p-4 space-y-4">
        <h4 className="font-medium flex items-center gap-2">
          <Package size={16} />
          Qu·∫£n l√Ω t·ªìn kho
        </h4>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          {/* Stock Quantity - Required */}
          <div>
            <Input
              label="S·ªë l∆∞·ª£ng t·ªìn kho"
              type="number"
              placeholder="0"
              value={form.stock_quantity || ''}
              onChange={(e) => update('stock_quantity', Number(e.target.value))}
              error={errors.stock_quantity}
              required
              helper="S·ªë l∆∞·ª£ng s·∫£n ph·∫©m hi·ªán c√≥"
              min={0}
            />
          </div>

          {/* Min Stock Level */}
          <div>
            <Input
              label="M·ª©c t·ªìn kho t·ªëi thi·ªÉu"
              type="number"
              placeholder="5"
              value={form.min_stock_level || ''}
              onChange={(e) => update('min_stock_level', Number(e.target.value))}
              error={errors.min_stock_level}
              helper="C·∫£nh b√°o khi t·ªìn kho d∆∞·ªõi m·ª©c n√†y"
              min={0}
            />
          </div>
        </div>

        {/* Stock Status */}
        <div className={`${stockStatus.bg} border rounded-lg p-3`}>
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-2">
              {form.stock_quantity <= (form.min_stock_level || 5) && (
                <AlertTriangle size={18} className={stockStatus.color} />
              )}
              <span className="font-medium">Tr·∫°ng th√°i:</span>
              <span className={`${stockStatus.color} font-semibold`}>
                {stockStatus.label}
              </span>
            </div>
            <div className="text-sm">
              <span className="text-muted-foreground">T·ªìn kho: </span>
              <span className="font-semibold">{form.stock_quantity || 0} s·∫£n ph·∫©m</span>
            </div>
          </div>

          {form.stock_quantity <= (form.min_stock_level || 5) && form.stock_quantity > 0 && (
            <div className="mt-2 text-sm text-yellow-700">
              ‚ö†Ô∏è S·∫Øp h·∫øt h√†ng! C·∫ßn nh·∫≠p th√™m {(form.min_stock_level || 5) - form.stock_quantity + 10} s·∫£n ph·∫©m
            </div>
          )}

          {form.stock_quantity <= 0 && (
            <div className="mt-2 text-sm text-red-700">
              üö´ H·∫øt h√†ng! Kh√°ch h√†ng kh√¥ng th·ªÉ ƒë·∫∑t mua
            </div>
          )}
        </div>
      </div>

      {/* Quick Tips */}
      <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 text-sm">
        <h4 className="font-semibold text-blue-900 mb-2">üí° M·∫πo:</h4>
        <ul className="space-y-1 text-blue-800">
          <li>‚Ä¢ Gi√° b√°n ph·∫£i l·ªõn h∆°n gi√° v·ªën ƒë·ªÉ c√≥ l·ª£i nhu·∫≠n</li>
          <li>‚Ä¢ Gi√° g·ªëc l·ªõn h∆°n gi√° b√°n s·∫Ω hi·ªÉn th·ªã % gi·∫£m gi√°</li>
          <li>‚Ä¢ ƒê·∫∑t m·ª©c t·ªìn kho t·ªëi thi·ªÉu ƒë·ªÉ ƒë∆∞·ª£c c·∫£nh b√°o k·ªãp th·ªùi</li>
          <li>‚Ä¢ Khi t·ªìn kho = 0, s·∫£n ph·∫©m t·ª± ƒë·ªông chuy·ªÉn sang "H·∫øt h√†ng"</li>
        </ul>
      </div>
    </div>
  );
};

export default ProductPricingStock;
